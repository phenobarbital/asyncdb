version: '${docker_version}'

services:
  api:
    volumes:
      - ${api_source}:/home/troc/code
    restart: '${docker_autorestart}'
    build:
      context: ${api_source}
      dockerfile: ./Dockerfile
    command: "python /home/troc/code/run.py"
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
      - rethinkdb
      - memcached
    extra_hosts:
      - nav-api.dev.local:${iplocal}
      - navigator-dev.dev.local:${iplocal}
      - rethink.dev.local:${iplocal}
      - postgres.dev.local:${iplocal}
    networks:
      infranet:
        aliases:
          - 'api'
  influxdb:
    container_name: influxdb
    image: influxdb
    restart: '${docker_autorestart}'
    volumes:
      - ${influxdb_datadir}:/data
    environment:
      - "INFLUXDB_GRAPHITE_ENABLED=${influxdb_INFLUXDB_GRAPHITE_ENABLED}"
      - "INFLUXDB_DB=${influxdb_INFLUXDB_DB}"
      - "INFLUXDB_ADMIN_USER=${influxdb_INFLUXDB_ADMIN_USER}"
      - "INFLUXDB_ADMIN_PASSWORD=${influxdb_INFLUXDB_ADMIN_PASSWORD}"
      - "INFLUXDB_USER=${influxdb_INFLUXDB_USER}"
      - "INFLUXDB_USER_PASSWORD=${influxdb_INFLUXDB_USER_PASSWORD}"
    ports:
      - '8086:8086'
      - '2003:2003'
  memcached:
    container_name: memcached
    image: memcached
    restart: '${docker_autorestart}'
    command:
      - '-m 256'
    ports:
      - '11211:11211'
  rethinkdb:
    image: rethinkdb
    restart: '${docker_autorestart}'
    ports:
      - "8080:8080"
      - "28015:28015"
      - "29015:29015"
    volumes:
      - ${rethink_datadir}:/data
      - ${rethink_backupdir}:/opt
    networks:
      infranet:
        aliases:
          - 'dwh'
  redis:
    image: redis
    restart: '${docker_autorestart}'
    ports:
      - "6379:6379"
    networks:
      infranet:
        aliases:
          - 'redis'
  postgres:
    image: ${postgres_image}
    build: ./postgres
    restart: '${docker_autorestart}'
    command: postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/logs
    ports:
      - '5432:5432'
    volumes:
      - ${postgres_datadir}:/var/lib/postgresql/data
      - ${postgres_backupdir}:/opt
      - ${postgres_logdir}:/logs
    environment:
      - "PG_DB_USER=${postgres_PG_USER}"
      - "PG_DB_SPUSER=${postgres_PG_SPUSER}"
      - "PG_DB_PASSWORD=${postgres_PG_PASSWORD}"
      - "PG_DB_DATABASE=${postgres_PG_DATABASE}"
      - "POSTGRES_PASSWORD=${postgres_PG_PASSWORD}"
    networks:
      infranet:
        aliases:
          - 'postgres'
  mysql:
    image: mysql
    restart: '${docker_autorestart}'
    environment:
      - "MYSQL_DATABASE=${mysql_MYSQL_DATABASE}"
      - "MYSQL_USER=${mysql_MYSQL_USER}"
      - "MYSQL_PASSWORD=${mysql_MYSQL_PASSWORD}"
      - "MYSQL_ROOT_PASSWORD=${mysql_MYSQL_PASSWORD}"
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - ${mysql_datadir}:/var/lib/mysql
  cassandra:
    image: cassandra
    restart: '${docker_autorestart}'
    environment:
      - "CASSANDRA_CLUSTER_NAME=${cassandra_CASSANDRA_CLUSTER_NAME}"
    ports:
      - '7000:7000'
    expose:
      - '7000'
    volumes:
      - ${cassandra_datadir}:/data
networks:
  infranet:
